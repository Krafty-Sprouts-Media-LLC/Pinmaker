# Pinterest Template Generator - Nginx Configuration
# Domain: pinmaker.kraftysprouts.com
# This configuration provides SSL termination, static file serving,
# reverse proxy to the FastAPI application, and security hardening.

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Upstream backend servers
upstream pinmaker_backend {
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    # Add more servers here for load balancing:
    # server 127.0.0.1:8001 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:8002 max_fails=3 fail_timeout=30s;
    
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# HTTP server - serving application directly
server {
    listen 80;
    listen [::]:80;
    server_name pinmaker.kraftysprouts.com www.pinmaker.kraftysprouts.com localhost;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob: https:; connect-src 'self' https:; media-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()" always;
    
    # Remove server signature
    server_tokens off;
    
    # Connection and rate limiting
    limit_conn conn_limit_per_ip 20;
    limit_req zone=general burst=50 nodelay;
    
    # Basic settings
    root /opt/Pinmaker/frontend/dist;
    index index.html index.htm;
    
    # Client settings
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Let's Encrypt challenge (for future SSL setup)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon
        application/x-perl
        application/x-pilot
        application/x-rar-compressed
        application/x-redhat-package-manager
        application/x-sea
        application/x-shockwave-flash
        application/x-stuffit
        application/x-tcl
        application/x-x509-ca-cert
        application/x-xpinstall
        application/zip;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Static files with long cache
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|gz|zip|mp3|mp4|webm|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # CORS for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
        }
    }
    
    # Static assets from build
    location /static/ {
        alias /opt/Pinmaker/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Handle missing files gracefully
        try_files $uri $uri/ =404;
    }
    
    # Uploaded files
    location /uploads/ {
        alias /opt/Pinmaker/uploads/;
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        
        # Security: prevent execution of uploaded files
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # Generated templates
    location /templates/ {
        alias /opt/Pinmaker/templates/;
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        
        # Allow downloads
        add_header Content-Disposition "attachment";
    }
    
    # Generated previews
    location /previews/ {
        alias /opt/Pinmaker/previews/;
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        
        # Allow downloads
        add_header Content-Disposition "attachment";
    }
    
    # Custom fonts
    location /fonts/ {
        alias /opt/Pinmaker/fonts/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        
        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://pinmaker_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Buffering settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Handle large uploads
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
    }
    
    # File upload endpoint with stricter rate limiting
    location /api/upload {
        limit_req zone=upload burst=5 nodelay;
        
        proxy_pass http://pinmaker_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for uploads
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_max_temp_file_size 0;
        
        # Extended timeouts for large uploads
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://pinmaker_backend;
        access_log off;
        
        # Quick health check settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # API documentation
    location /docs {
        proxy_pass http://pinmaker_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # OpenAPI schema
    location /openapi.json {
        proxy_pass http://pinmaker_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache the schema
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Main application (React frontend)
    location / {
        try_files $uri $uri/ @app;
        
        # Cache HTML files for short time
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "public";
        }
    }
    
    # Fallback to FastAPI for SPA routing
    location @app {
        proxy_pass http://pinmaker_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(requirements\.txt|setup\.sh|\.env|\.git|package\.json|node_modules|venv|\.pyc$|__pycache__|backup\.sh|deploy\.sh|monitor\.sh) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to log files
    location ~ /logs/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* /(wp-admin|wp-login|wp-content|admin|phpmyadmin|mysql|sql|database) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Block suspicious requests
    location ~* \.(php|asp|aspx|jsp|cgi|pl)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /opt/Pinmaker/static;
        internal;
    }
    
    location = /50x.html {
        root /opt/Pinmaker/static;
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/pinmaker_access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/pinmaker_error.log warn;
}

# Additional server block for www redirect (HTTP only for now)
# SSL configuration will be added later after certificate setup
server {
    listen 80;
    listen [::]:80;
    server_name www.pinmaker.kraftysprouts.com;
    
    # Redirect www to non-www
    return 301 http://pinmaker.kraftysprouts.com$request_uri;
}